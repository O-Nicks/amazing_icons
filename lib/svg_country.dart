import 'dart:ui';

import 'package:flutter/material.dart';

import 'svg_icon.dart';

/// Shape options for country flag icons
enum IconShape {
  circle,
  rounded,
  sharp,
}

class SvgCountry {
  const SvgCountry._();

  static const List<String> validCodes = [
    'ac',
    'ad',
    'ae',
    'af',
    'ag',
    'ai',
    'al',
    'am',
    'ao',
    'aq',
    'ar',
    'as',
    'at',
    'au',
    'aw',
    'ax',
    'az',
    'ba',
    'bb',
    'bd',
    'be',
    'bf',
    'bg',
    'bh',
    'bi',
    'bj',
    'bl',
    'bm',
    'bn',
    'bo',
    'bq',
    'br',
    'bs',
    'bt',
    'bv',
    'bw',
    'by',
    'bz',
    'ca',
    'cc',
    'cd',
    'cefta',
    'cf',
    'cg',
    'ch',
    'ci',
    'ck',
    'cl',
    'cm',
    'cn',
    'co',
    'cp',
    'cr',
    'cu',
    'cv',
    'cw',
    'cx',
    'cy',
    'cz',
    'de',
    'dg',
    'dj',
    'dk',
    'dm',
    'do',
    'dz',
    'ea',
    'ec',
    'ee',
    'eg',
    'eh',
    'er',
    'es',
    'es-ct',
    'es-ga',
    'et',
    'eu',
    'fi',
    'fj',
    'fk',
    'fm',
    'fo',
    'fr',
    'ga',
    'gb',
    'gb-eng',
    'gb-nir',
    'gb-sct',
    'gb-wls',
    'gd',
    'ge',
    'gf',
    'gg',
    'gh',
    'gi',
    'gl',
    'gm',
    'gn',
    'gp',
    'gq',
    'gr',
    'gs',
    'gt',
    'gu',
    'gw',
    'gy',
    'hk',
    'hm',
    'hn',
    'hr',
    'ht',
    'hu',
    'ic',
    'id',
    'ie',
    'il',
    'im',
    'in',
    'io',
    'iq',
    'ir',
    'is',
    'it',
    'je',
    'jm',
    'jo',
    'jp',
    'ke',
    'kg',
    'kh',
    'ki',
    'km',
    'kn',
    'kp',
    'kr',
    'kw',
    'ky',
    'kz',
    'la',
    'lb',
    'lc',
    'li',
    'lk',
    'lr',
    'ls',
    'lt',
    'lu',
    'lv',
    'ly',
    'ma',
    'mc',
    'md',
    'me',
    'mf',
    'mg',
    'mh',
    'mk',
    'ml',
    'mm',
    'mn',
    'mo',
    'mp',
    'mq',
    'mr',
    'ms',
    'mt',
    'mu',
    'mv',
    'mw',
    'mx',
    'my',
    'mz',
    'na',
    'nc',
    'ne',
    'nf',
    'ng',
    'ni',
    'nl',
    'no',
    'np',
    'nr',
    'nu',
    'nz',
    'om',
    'pa',
    'pe',
    'pf',
    'pg',
    'ph',
    'pk',
    'pl',
    'pm',
    'pn',
    'pr',
    'ps',
    'pt',
    'pw',
    'py',
    'qa',
    're',
    'ro',
    'rs',
    'ru',
    'rw',
    'sa',
    'sb',
    'sc',
    'sd',
    'se',
    'sg',
    'sh',
    'si',
    'sj',
    'sk',
    'sl',
    'sm',
    'sn',
    'so',
    'sr',
    'ss',
    'st',
    'sv',
    'sx',
    'sy',
    'sz',
    'ta',
    'tc',
    'td',
    'tf',
    'tg',
    'th',
    'tj',
    'tk',
    'tl',
    'tm',
    'tn',
    'to',
    'tr',
    'tt',
    'tv',
    'tw',
    'tz',
    'ua',
    'ug',
    'um',
    'un',
    'us',
    'uy',
    'uz',
    'va',
    'vc',
    've',
    'vg',
    'vi',
    'vn',
    'vu',
    'wf',
    'ws',
    'xk',
    'xx',
    'ye',
    'yt',
    'za',
    'zm',
    'zw',
  ];

  /// Creates a country flag icon from a country code (ISO 3166-1 alpha-2)
  ///
  /// Returns null if the country code is invalid or not found.
  ///
  /// Example:
  /// ```dart
  /// SvgCountry.fromCountryCode('us') // United States
  /// SvgCountry.fromCountryCode('fr', shape: IconShape.circle) // France with circle shape
  /// SvgCountry.fromCountryCode('invalid') // null
  /// ```
  static Widget fromCountryCode(
    String countryCode, {
    IconShape shape = IconShape.sharp,
    double size = 24,
    Color? color,
    String? semanticLabel,
    Color background = Colors.transparent,
    Color borderColor = Colors.transparent,
    double borderWidth = 0,
  }) {
    String code = countryCode.toLowerCase();

    if (!validCodes.contains(code)) {
      code = 'xx';
    }

    final borderRadius = switch (shape) {
      IconShape.circle => BorderRadius.circular(size / 2), // cercle parfait
      IconShape.rounded => BorderRadius.circular(size * 0.15), // arrondi proportionnel
      IconShape.sharp => BorderRadius.zero, // pas d'arrondi
    };

    final assetPath = 'icons/fixed/country/$code.svg';
    final aspectRatio = shape == IconShape.circle ? 1.0 : 4 / 3;
    final width = size * aspectRatio;

    return SizedBox(
      width: width,
      height: size,
      child: Container(
        clipBehavior: Clip.hardEdge,
        decoration: BoxDecoration(
          borderRadius: borderRadius,
          color: background,
          border: Border.all(color: borderColor, width: borderWidth),
        ),
        child: SvgIcon(
          fit: BoxFit.cover,
          assetPath,
          size: size,
          color: color,
          semanticLabel: 'Flag of $code',
          recolor: false,
        ),
      ),
    );
  }
}
